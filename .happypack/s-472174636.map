{"version":3,"sources":["app/containers/SinglePostContainer.jsx"],"names":["mapStateToProps","state","props","userid","UserReducer","displayname","post","PostReducer","postid","params","loading","mode","location","query","mapDispatchToProps","dispatch","onSaveClick","onPreviewClick","loadSinglePost","resetPost","SinglePostContainer"],"mappings":";;;;;;AAAA;;;;AACA;;AAEA;;;;AAEA;;AACA;;;;AAGA,IAAMA,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,KAAR,EAAiB;;AAExC,QAAO;AACNC,UAAQF,MAAMG,WAAN,CAAkBD,MAAlB,GAA2BF,MAAMG,WAAN,CAAkBD,MAA7C,GAAsD,IADxD;AAENE,eAAaJ,MAAMG,WAAN,CAAkBC,WAAlB,GAAgCJ,MAAMG,WAAN,CAAkBC,WAAlD,GAAgE,OAFvE;AAGNC,QAAML,MAAMM,WAAN,CAAkBD,IAAlB,GAAyBL,MAAMM,WAAN,CAAkBD,IAA3C,GAAkD,EAHlD;AAINE,UAAQN,MAAMO,MAAN,CAAaD,MAJf;AAKNE,WAAST,MAAMM,WAAN,CAAkBG,OALrB;AAMNC,QAAMT,MAAMU,QAAN,CAAeC,KAAf,CAAqBF;;AANrB,EAAP;AASA,CAXD;;AAaA,IAAMG,qBAAqB,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACxC,QAAO;AACNC,eAAa,qBAACV,IAAD,EAAU;AACtBS,YAAS,mCAAiBT,IAAjB,CAAT;AAEA,GAJK;AAKNW,kBAAgB,wBAACX,IAAD,EAAU;AACtBS,YAAS,mCAAiBT,IAAjB,CAAT;AACH,GAPK;AAQNY,kBAAgB,wBAACV,MAAD,EAAY;AAC3B,OAAGA,UAAU,IAAV,IAAkBA,UAAU,EAA/B,EAAkC;AACjCO,aAAS,0CAAwBP,MAAxB,CAAT;AACA;AACD,GAZK;AAaNW,aAAW,qBAAM;AAChBJ,YAAS,oCAAT;AACA;AAfK,EAAP;AAiBA,CAlBD;;AAqBA,IAAMK,sBAAsB,yBAAQpB,eAAR,EAAyBc,kBAAzB,gCAA5B;;eAGeM,mB;;;;;;;;;+BArCTpB,e;;+BAaAc,kB;;+BAqBAM,mB","file":"SinglePostContainer.jsx","sourceRoot":"/home/ubuntu/workspace","sourcesContent":["import React from 'react'\nimport { Provider, connect } from 'react-redux'\n\nimport SinglePostComponent from '../components/SinglePostComponent'\n\nimport {Save_Post_Action, Load_Single_Post_Succeed_Action, Load_Single_Post_Action, Init_Post_Action } from '../actions/PostActions'\nimport {Open_Dialog } from '../actions/UserActions'\n\n\nconst mapStateToProps = (state, props) =>{\n\n\treturn {\n\t\tuserid: state.UserReducer.userid ? state.UserReducer.userid : null,\n\t\tdisplayname: state.UserReducer.displayname ? state.UserReducer.displayname : 'Guest',\n\t\tpost: state.PostReducer.post ? state.PostReducer.post : {},\n\t\tpostid: props.params.postid,\n\t\tloading: state.PostReducer.loading,\n\t\tmode: props.location.query.mode\n\t\t\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonSaveClick: (post) => {\n\t\t\tdispatch(Save_Post_Action(post));\n\t\t\t\n\t\t},\n\t\tonPreviewClick: (post) => {\n\t\t    dispatch(Save_Post_Action(post));\n\t\t},\n\t\tloadSinglePost: (postid) => {\n\t\t\tif(postid != null && postid != ''){\n\t\t\t\tdispatch(Load_Single_Post_Action(postid));\n\t\t\t}\n\t\t},\n\t\tresetPost: () => {\n\t\t\tdispatch(Init_Post_Action());\n\t\t}\n\t}\n}\n\n\nconst SinglePostContainer = connect(mapStateToProps, mapDispatchToProps)(SinglePostComponent);\n\n\nexport default SinglePostContainer"]}