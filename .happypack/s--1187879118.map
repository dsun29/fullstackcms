{"version":3,"sources":["app/actions/UserActions.jsx"],"names":["Twitter_Login_Start_Action","Google_Login_Action","State_Initialization_Action","Logout_Action","Update_Config_Action","Set_Configurations_Action","Login_Action","author","token","type","Login_Succeed_Action","userid","displayname","Logout_Done_Action","Login_Fail_Action","error","dispatch","url","service_root_url","method","contentType","data","err","console","log","status","window","location","responseText","success","response","googleReponse","crossOrigin","withCredentials","profileObj","email","tokenId","Open_Dialog","title","body","onClose","dialogTitle","dialogBody","onDialogClose","Close_Dialog","Open_Spinner","Close_Spinner","params","Get_State_Succeed_Action","redirect","states","savedStates","newConfigValue","newConfigValues"],"mappings":"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","file":"UserActions.jsx","sourceRoot":"/home/ubuntu/workspace","sourcesContent":["import reqwest from 'reqwest'\nimport config from '../../share/global_config'\n\nexport const Login_Action = (author, token) => {\n\treturn {\n\t\ttype: 'LOGIN',\n\t\tauthor: author,\n\t\ttoken: token\n\t}\n}\n\n\nexport const Login_Succeed_Action = (userid, displayname) => {\n\treturn {\n\t\ttype: 'LOGIN_SUCCEED',\n\t\tuserid: userid,\n\t\tdisplayname: displayname\n\t}\n}\n\nexport const Logout_Done_Action = () => {\n    return {\n\t\ttype: 'LOGOUT'\n    }\n}\n\nexport const Login_Fail_Action = (error) => {\n\treturn {\n\t\ttype: 'LOGIN_FAIL',\n\t\terror: error\n\t}\n}\n\nexport function Twitter_Login_Start_Action(){\n\treturn function (dispatch){\n\t\treturn reqwest({\n            url: config.service_root_url + 'api/login',\n            method: 'post',\n            type: 'json',\n            contentType: 'application/x-www-form-urlencoded',\n            data: {\"source\": \"twitter\"},\n            error: function(err){\n                 console.log('Twitter login error = ', err);\n                 if(err.status == 200){\n                \twindow.location = err.responseText;\n                \treturn;\n                 }\n                 dispatch(Login_Fail_Action(err));\n            },\n            success: function (response) {\n              \t//dispatch(Login_Succeed_Action(response.userid, response.displayname));\n              \twindow.location = response;\n            }\n\n        })\n\t}\n\t\n}\n\n\nexport function Google_Login_Action(googleReponse){\n\treturn function (dispatch){\n\t\treturn reqwest({\n            url: config.service_root_url + 'api/login',\n            method: 'post',\n            type: 'json',\n            contentType: 'application/x-www-form-urlencoded',\n            crossOrigin: true,\n\t\t\twithCredentials: true,\n            data: {\"email\": googleReponse.profileObj.email, \"tokenId\": googleReponse.tokenId},\n            error: function(err){\n                 console.log('Eoooo = ', err);\n                 dispatch(Login_Fail_Action(err));\n            },\n            success: function (response) {\n              \tconsole.log('goood = ' + response);\n              \tdispatch(Login_Succeed_Action(response.userid, response.displayname));\n            }\n\n        })\n\t}\n}\n\n/*********************************************************************************/\nexport const Open_Dialog = (title, body, onClose) => {\n\treturn {\n\t\ttype: 'OPEN_DIALOG',\n\t\tdialogTitle: title,\n\t\tdialogBody: body,\n\t\tonDialogClose: onClose\n\t}\n\t\n}\n\nexport const Close_Dialog = () => {\n\t\n\treturn {\n\t\ttype: 'CLOSE_DIALOG'\n\t}\n}\n\n\n\n/*********************************************************************************/\nexport const Open_Spinner = () => {\n\treturn {\n\t\ttype: 'OPEN_SPINNER'\n\t}\n}\n\nexport const Close_Spinner = () => {\n\t\n\treturn {\n\t\ttype: 'CLOSE_SPINNER'\n\t}\n}\n\n/*********************************************************************************/\n\nexport function State_Initialization_Action(params){\n\treturn function (dispatch){\n\t\treturn reqwest({\n            url: config.service_root_url + 'api/state',\n            method: 'post',\n            type: 'json',\n            contentType: 'application/x-www-form-urlencoded',\n            data: params,\n            error: function(err){\n                 console.log('get init state erro = ', err);\n                 if(err.status == 200){\n                \t window.location = err.responseText;\n                    return;\n                 }\n                 dispatch(Login_Fail_Action(err));\n            },\n            success: function (response) {\n              \tconsole.log('goood = ', response);\n              \tdispatch(Get_State_Succeed_Action(response));\n              \t\n              \tif(response != null && response.redirect != null){\n              \t    window.location = response.redirect;\n              \t}\n              \t\n            }\n\n        })\n\t}\n\t\n}\n\nexport const Get_State_Succeed_Action = (states) => {\n\treturn {\n\t\ttype: 'GET_SAVED_STATE_SUCCEED',\n\t\tsavedStates: states\n\t}\n}\n\nexport function Logout_Action(){\n\treturn function (dispatch){\n\t\treturn reqwest({\n            url: config.service_root_url + 'api/logout',\n            method: 'post',\n            type: 'json',\n            contentType: 'application/x-www-form-urlencoded',\n            crossOrigin: true,\n\t\t\twithCredentials: true,\n            error: function(err){\n                 console.log('Log out error = ', err);\n                 dispatch(Login_Fail_Action(err));\n            },\n            success: function (response) {\n              \tdispatch(Logout_Done_Action());\n            }\n\n        })\n\t}\n}\n\n/****************************************************************************/\n\nexport function Update_Config_Action(newConfigValue){\n    \n    \n    \n\treturn function (dispatch){\n\t    \n\t    dispatch(Open_Spinner());\n\t    \n\t\treturn reqwest({\n            url: config.service_root_url + 'api/config',\n            method: 'post',\n            type: 'json',\n            contentType: 'application/x-www-form-urlencoded',\n            crossOrigin: true,\n            data: newConfigValue,\n\t\t\twithCredentials: true,\n            error: function(err){\n                 console.log('Update_Config_Action error = ', err);\n                 \n                 dispatch(Close_Spinner());\n            },\n            success: function (response) {\n              \t\n              \tconsole.log('Update_Config_Action good = ', response);\n              \tdispatch(Close_Spinner());\n              \t\n            }\n\n        })\n\t}\n}\n\n/****************************************************************************/\n\nexport function Set_Configurations_Action(newConfigValues){\n    \n    dispatch(Open_Spinner());\n    \n\treturn function (dispatch){\n\t\treturn reqwest({\n            url: config.service_root_url + 'api/installation',\n            method: 'post',\n            type: 'json',\n            contentType: 'application/x-www-form-urlencoded',\n            crossOrigin: true,\n            data: newConfigValues,\n\t\t\twithCredentials: true,\n            error: function(err){\n                 console.log('Update_Config_Action error = ', err);\n                 \n                 dispatch(Close_Spinner());\n            },\n            success: function (response) {\n              \t\n              \tconsole.log('Update_Config_Action good = ', response);\n              \tdispatch(Close_Spinner());\n              \t\n            }\n\n        })\n\t}\n}"]}