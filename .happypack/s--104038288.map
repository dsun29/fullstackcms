{"version":3,"sources":["app/reducers/ProductsReducer.jsx"],"names":["productReducer","defaultState","items","cart","state","action","type","set","addToCart","removeFromCart","nextCart","get","push","id","ajax","url","data","JSON","stringify","contentType","success","response","console","log","index","findIndex","delete"],"mappings":";;;;;kBAQwBA,c;;AARxB;;AACA;;;;;;AAEA,IAAMC,eAAe,oBAAI;AACrBC,WAAO,sBADc;AAErBC,UAAM;AAFe,CAAJ,CAArB;;AAKe,SAASH,cAAT,GAAsD;AAAA,QAA9BI,KAA8B,yDAAtBH,YAAsB;AAAA,QAARI,MAAQ;;AACjE,YAAOA,OAAOC,IAAd;AACI,aAAK,WAAL;AACI,mBAAOF,MAAMG,GAAN,CAAU,OAAV,EAAmB,uBAAOF,OAAOH,KAAd,CAAnB,CAAP;AACJ,aAAK,UAAL;AACI,mBAAOE,MAAMG,GAAN,CAAU,MAAV,EAAkB,uBAAOF,OAAOF,IAAd,CAAlB,CAAP;AACJ,aAAK,UAAL;AACI,mBAAOK,UAAUJ,KAAV,EAAiBC,MAAjB,CAAP;AACJ,aAAK,aAAL;AACI,mBAAOI,eAAeL,KAAf,EAAsBC,MAAtB,CAAP;AACJ;AACI,mBAAOD,KAAP;AAVR;AAYH;;AAED,SAASI,SAAT,CAAmBJ,KAAnB,EAA0BC,MAA1B,EAAkC;AAC9B,QAAMK,WAAWN,MAAMO,GAAN,CAAU,MAAV,EAAkBC,IAAlB,CAAuBP,OAAOQ,EAA9B,CAAjB;;AAEA,qBAAEC,IAAF,CAAO;AACHR,cAAM,MADH;AAEHS,aAAK,uBAFF;AAGHC,cAAMC,KAAKC,SAAL,CAAe,EAAEf,MAAMO,QAAR,EAAf,CAHH;AAIHS,qBAAa,kBAJV;AAKHC,eALG,mBAKKC,QALL,EAKe;AACdC,oBAAQC,GAAR,CAAYF,QAAZ;AACH;AAPE,KAAP;;AAUA,WAAOjB,MAAMG,GAAN,CAAU,MAAV,EAAkBG,QAAlB,CAAP;AACH;;AAED,SAASD,cAAT,CAAwBL,KAAxB,EAA+BC,MAA/B,EAAuC;AACnC,QAAMF,OAAOC,MAAMO,GAAN,CAAU,MAAV,CAAb;AACA,QAAMa,QAAQrB,KAAKsB,SAAL,CAAe;AAAA,eAAMZ,OAAOR,OAAOQ,EAApB;AAAA,KAAf,CAAd;AACA,QAAMH,WAAWP,KAAKuB,MAAL,CAAYF,KAAZ,CAAjB;;AAEA,qBAAEV,IAAF,CAAO;AACHR,cAAM,MADH;AAEHS,aAAK,uBAFF;AAGHC,cAAMC,KAAKC,SAAL,CAAe,EAAEf,MAAMO,QAAR,EAAf,CAHH;AAIHS,qBAAa,kBAJV;AAKHC,eALG,mBAKKC,QALL,EAKe;AACdC,oBAAQC,GAAR,CAAYF,QAAZ;AACH;AAPE,KAAP;;AAUA,WAAOjB,MAAMG,GAAN,CAAU,MAAV,EAAkBG,QAAlB,CAAP;AACH;;;;;;;;kCA/CuBV,c;;kCAefQ,S;;kCAgBAC,c;;kCApCHR,Y","file":"ProductsReducer.jsx","sourceRoot":"/home/ubuntu/workspace","sourcesContent":["import { Map, List, fromJS } from 'immutable';\nimport $ from 'jquery';\n\nconst defaultState = Map({\n    items: List(),\n    cart: List()\n});\n\nexport default function productReducer(state = defaultState, action) {\n    switch(action.type) {\n        case 'SET_ITEMS':\n            return state.set('items', fromJS(action.items));\n        case 'SET_CART':\n            return state.set('cart', fromJS(action.cart));\n        case 'CART_ADD':\n            return addToCart(state, action); \n        case 'CART_REMOVE':\n            return removeFromCart(state, action);\n        default:\n            return state;\n    }\n}\n\nfunction addToCart(state, action) {\n    const nextCart = state.get('cart').push(action.id);\n\n    $.ajax({\n        type: 'POST',\n        url: '/products/cart/update',\n        data: JSON.stringify({ cart: nextCart }),\n        contentType: 'application/json',\n        success(response) {\n            console.log(response);\n        }\n    });\n\n    return state.set('cart', nextCart); \n}\n\nfunction removeFromCart(state, action) {\n    const cart = state.get('cart');\n    const index = cart.findIndex(id => id === action.id);\n    const nextCart = cart.delete(index);\n\n    $.ajax({\n        type: 'POST',\n        url: '/products/cart/update',\n        data: JSON.stringify({ cart: nextCart }),\n        contentType: 'application/json',\n        success(response) {\n            console.log(response);\n        }\n    });\n\n    return state.set('cart', nextCart);\n}\n"]}