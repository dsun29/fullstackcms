{"version":3,"sources":["app/containers/InstallationContainer.jsx"],"names":["mapStateToProps","state","props","console","log","location","query","userid","UserReducer","displayname","posts","PostReducer","queryParams","tag","t","keywords","k","mapDispatchToProps","dispatch","updateConfigAction","newValue","installConfigure","newValues","InstallationContainer"],"mappings":";;;;;;AAAA;;;;AACA;;AAEA;;;;AAEA;;AACA;;;;AAEA,IAAMA,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,KAAR,EAAiB;AACxCC,SAAQC,GAAR,CAAY,qBAAZ,EAAmCF,MAAMG,QAAN,CAAeC,KAAlD;;AAEA,QAAO;AACNC,UAAQN,MAAMO,WAAN,CAAkBD,MAAlB,GAA2BN,MAAMO,WAAN,CAAkBD,MAA7C,GAAsD,IADxD;AAENE,eAAaR,MAAMO,WAAN,CAAkBC,WAAlB,GAAgCR,MAAMO,WAAN,CAAkBC,WAAlD,GAAgE,OAFvE;AAGNC,SAAOT,MAAMU,WAAN,CAAkBD,KAAlB,GAA0BT,MAAMU,WAAN,CAAkBD,KAA5C,GAAoD,EAHrD;AAINE,eAAaV,MAAMG,QAAN,CAAeC,KAJtB;AAKNO,OAAKX,MAAMG,QAAN,CAAeC,KAAf,CAAqBQ,CALpB;AAMNC,YAAUb,MAAMG,QAAN,CAAeC,KAAf,CAAqBU,CANzB,CAM2B;AAN3B,EAAP;AAQA,CAXD;;AAaA,IAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACxC,QAAO;AACNC,sBAAoB,4BAACC,QAAD,EAAc;AACjCF,YAAS,uCAAqBE,QAArB,CAAT;AACA,GAHK;;AAKNC,oBAAkB,0BAACC,SAAD,EAAe;AAChCJ,YAAS,uCAAqBI,SAArB,CAAT;AACA;;AAPK,EAAP;AAUA,CAXD;;AAcA,IAAMC,wBAAwB,yBAAQvB,eAAR,EAAyBiB,kBAAzB,kCAA9B;;eAGeM,qB;;;;;;;;;+BA9BTvB,e;;+BAaAiB,kB;;+BAcAM,qB","file":"InstallationContainer.jsx","sourceRoot":"/home/ubuntu/workspace","sourcesContent":["import React from 'react'\nimport { Provider, connect } from 'react-redux'\n\nimport InstallationComponent from '../components/InstallationComponent'\n\nimport { Update_Config_Action } from '../actions/UserActions'\nimport {browserHistory} from \"react-router\";\n\nconst mapStateToProps = (state, props) =>{\n\tconsole.log('params in container', props.location.query);\n\n\treturn {\n\t\tuserid: state.UserReducer.userid ? state.UserReducer.userid : null,\n\t\tdisplayname: state.UserReducer.displayname ? state.UserReducer.displayname : 'Guest',\n\t\tposts: state.PostReducer.posts ? state.PostReducer.posts : [],\n\t\tqueryParams: props.location.query,\n\t\ttag: props.location.query.t,\n\t\tkeywords: props.location.query.k //we must keep it, just for fun\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tupdateConfigAction: (newValue) => {\n\t\t\tdispatch(Update_Config_Action(newValue));\n\t\t},\n\t\t\n\t\tinstallConfigure: (newValues) => {\n\t\t\tdispatch(Update_Config_Action(newValues));\n\t\t}\n\t\t\n\t}\n}\n\n\nconst InstallationContainer = connect(mapStateToProps, mapDispatchToProps)(InstallationComponent);\n\n\nexport default InstallationContainer"]}