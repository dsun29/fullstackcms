'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
function PostReducer() {
	var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	var action = arguments[1];

	switch (action.type) {

		case 'SAVE_POST_SUCCEED':

			return Object.assign({}, state, action.post, { postid: action.post_id });

		case 'LOAD_POSTS_SUCCEED':

			return Object.assign({}, state, { posts: action.posts });

		case 'LOAD_POSTS_FAIL':

			return Object.assign({}, state, { error: action.error });

		case 'LOAD_SINGLE_POST_SUCCEED':

			return Object.assign({}, state, { post: action.post, postid: '', loading: false });

		case 'LOAD_SINGLE_POST_FAIL':

			return Object.assign({}, state, { error: action.error });

		case 'INIT_POST':

			return Object.assign({}, state, { post: {}, postid: '' });

		default:
			return state;
	}
}

var _default = PostReducer;
exports.default = _default;
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(PostReducer, 'PostReducer', '/home/ubuntu/workspace/app/reducers/PostReducer.jsx');

	__REACT_HOT_LOADER__.register(_default, 'default', '/home/ubuntu/workspace/app/reducers/PostReducer.jsx');
}();

;