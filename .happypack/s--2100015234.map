{"version":3,"sources":["app/containers/IndexContainer.jsx"],"names":["mapStateToProps","state","props","userid","UserReducer","displayname","posts","PostReducer","installing","queryParams","location","query","tag","t","keywords","k","mapDispatchToProps","dispatch","loadPosts","condition","onPostClick","postid","author","loadSavedStates","params","search","trim","undefined","length","push","startInstallation","IndexContainer"],"mappings":";;;;;;AAAA;;;;AACA;;AAEA;;;;AAEA;;AACA;;AACA;;;;AAEA,IAAMA,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,KAAR,EAAiB;;AAGxC,QAAO;AACNC,UAAQF,MAAMG,WAAN,CAAkBD,MAAlB,GAA2BF,MAAMG,WAAN,CAAkBD,MAA7C,GAAsD,IADxD;AAENE,eAAaJ,MAAMG,WAAN,CAAkBC,WAAlB,GAAgCJ,MAAMG,WAAN,CAAkBC,WAAlD,GAAgE,OAFvE;AAGNC,SAAOL,MAAMM,WAAN,CAAkBD,KAAlB,GAA0BL,MAAMM,WAAN,CAAkBD,KAA5C,GAAoD,EAHrD;AAINE,cAAYP,MAAMG,WAAN,CAAkBI,UAJxB;AAKNC,eAAaP,MAAMQ,QAAN,CAAeC,KALtB;AAMNC,OAAKV,MAAMQ,QAAN,CAAeC,KAAf,CAAqBE,CANpB;AAONC,YAAUZ,MAAMQ,QAAN,CAAeC,KAAf,CAAqBI,CAPzB,CAO2B;AAP3B,EAAP;AASA,CAZD;;AAcA,IAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACxC,QAAO;AACNC,aAAW,mBAACC,SAAD,EAAe;AACzBF,YAAS,oCAAkBE,SAAlB,CAAT;AACA,GAHK;AAINC,eAAY,qBAACC,MAAD,EAAY;AACvBJ,YAAS,oCAAkB,EAACK,QAAOnB,MAAR,EAAlB,CAAT;AACA,GANK;AAONoB,mBAAiB,yBAACC,MAAD,EAAY;AAC5BP,YAAS,8CAA4BO,MAA5B,CAAT;AACA,GATK;AAUNC,UAAQ,gBAACX,QAAD,EAAc;AACrBA,cAAWA,SAASY,IAAT,EAAX;AACA,OAAGZ,aAAa,IAAb,IAAqBA,aAAaa,SAAlC,IAA+Cb,SAASc,MAAT,GAAkB,CAApE,EAAsE;AACrE,WAAO,IAAP;AACA;AACD,+BAAeC,IAAf,CAAoB,SAASf,QAA7B;AACA,GAhBK;AAiBNgB,qBAAmB,6BAAM;AACxB,+BAAeD,IAAf,CAAoB,UAApB;AACA;;AAnBK,EAAP;AAuBA,CAxBD;;AA2BA,IAAME,iBAAiB,yBAAQ/B,eAAR,EAAyBgB,kBAAzB,2BAAvB;;eAGee,c;;;;;;;;;+BA5CT/B,e;;+BAcAgB,kB;;+BA2BAe,c","file":"IndexContainer.jsx","sourceRoot":"/home/ubuntu/workspace","sourcesContent":["import React from 'react'\nimport { Provider, connect } from 'react-redux'\n\nimport IndexComponent from '../components/IndexComponent'\n\nimport {Load_Posts_Action} from '../actions/PostActions'\nimport {State_Initialization_Action} from '../actions/UserActions'\nimport {browserHistory} from \"react-router\";\n\nconst mapStateToProps = (state, props) =>{\n\t\n\n\treturn {\n\t\tuserid: state.UserReducer.userid ? state.UserReducer.userid : null,\n\t\tdisplayname: state.UserReducer.displayname ? state.UserReducer.displayname : 'Guest',\n\t\tposts: state.PostReducer.posts ? state.PostReducer.posts : [],\n\t\tinstalling: state.UserReducer.installing,\n\t\tqueryParams: props.location.query,\n\t\ttag: props.location.query.t,\n\t\tkeywords: props.location.query.k //we must keep it, just for fun\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tloadPosts: (condition) => {\n\t\t\tdispatch(Load_Posts_Action(condition));\n\t\t},\n\t\tonPostClick:(postid) => {\n\t\t\tdispatch(Load_Posts_Action({author:userid}));\n\t\t},\n\t\tloadSavedStates: (params) => {\n\t\t\tdispatch(State_Initialization_Action(params));\n\t\t},\n\t\tsearch: (keywords) => {\n\t\t\tkeywords = keywords.trim();\n\t\t\tif(keywords === null || keywords === undefined || keywords.length < 2){\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tbrowserHistory.push('/?k=' + keywords);\n\t\t},\n\t\tstartInstallation: () => {\n\t\t\tbrowserHistory.push('/install');\n\t\t}\n\t\t\n\t\t\n\t}\n}\n\n\nconst IndexContainer = connect(mapStateToProps, mapDispatchToProps)(IndexComponent);\n\n\nexport default IndexContainer"]}