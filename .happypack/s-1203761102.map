{"version":3,"sources":["app/containers/PostDisplayContainer.jsx"],"names":["mapStateToProps","state","props","console","log","userid","UserReducer","displayname","post","PostReducer","postid","params","loading","mapDispatchToProps","dispatch","onSaveClick","onPreviewClick","loadSinglePost","resetPost","PostDisplayContainer"],"mappings":";;;;;;AAAA;;;;AACA;;AAEA;;;;AAGA;;AACA;;;;AAGA,IAAMA,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,KAAR,EAAiB;AACxCC,SAAQC,GAAR,CAAY,UAAZ,EAAwBH,KAAxB;;AAEA,QAAO;AACNI,UAAQJ,MAAMK,WAAN,CAAkBD,MAAlB,GAA2BJ,MAAMK,WAAN,CAAkBD,MAA7C,GAAsD,IADxD;AAENE,eAAaN,MAAMK,WAAN,CAAkBC,WAAlB,GAAgCN,MAAMK,WAAN,CAAkBC,WAAlD,GAAgE,OAFvE;AAGNC,QAAMP,MAAMQ,WAAN,CAAkBD,IAAlB,GAAyBP,MAAMQ,WAAN,CAAkBD,IAA3C,GAAkD,EAHlD;AAINE,UAAQR,MAAMS,MAAN,CAAaD,MAJf;AAKNE,WAASX,MAAMQ,WAAN,CAAkBG;;AALrB,EAAP;AASA,CAZD;;AAcA,IAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACxC,QAAO;AACNC,eAAa,qBAACP,IAAD,EAAU;AACtBM,YAAS,mCAAiBN,IAAjB,CAAT;AAEA,GAJK;AAKNQ,kBAAgB,wBAACR,IAAD,EAAU;AACtBM,YAAS,mCAAiBN,IAAjB,CAAT;AACH,GAPK;AAQNS,kBAAgB,wBAACP,MAAD,EAAY;AAC3B,OAAGA,UAAU,IAAV,IAAkBA,UAAU,EAA/B,EAAkC;AACjCI,aAAS,oCAAT;AACA,IAFD,MAGI;AACHA,aAAS,0CAAwBJ,MAAxB,CAAT;AACA;AACD,GAfK;AAgBNQ,aAAW,qBAAM;AACfJ,YAAS,oCAAT;AACD;AAlBK,EAAP;AAoBA,CArBD;;AAwBA,IAAMK,uBAAuB,yBAAQnB,eAAR,EAAyBa,kBAAzB,iCAA7B;;eAGeM,oB;;;;;;;;;+BAzCTnB,e;;+BAcAa,kB;;+BAwBAM,oB","file":"PostDisplayContainer.jsx","sourceRoot":"/home/ubuntu/workspace","sourcesContent":["import React from 'react'\nimport { Provider, connect } from 'react-redux'\n\nimport PostDisplayComponent from '../components/PostDisplayComponent'\n\n\nimport {Save_Post_Action, Load_Single_Post_Succeed_Action, Load_Single_Post_Action, Init_Post_Action } from '../actions/PostActions'\nimport {Open_Dialog } from '../actions/UserActions'\n\n\nconst mapStateToProps = (state, props) =>{\n\tconsole.log('state - ', state);\n\t\n\treturn {\n\t\tuserid: state.UserReducer.userid ? state.UserReducer.userid : null,\n\t\tdisplayname: state.UserReducer.displayname ? state.UserReducer.displayname : 'Guest',\n\t\tpost: state.PostReducer.post ? state.PostReducer.post : {},\n\t\tpostid: props.params.postid,\n\t\tloading: state.PostReducer.loading\n\t\t\n\t}\n\t\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonSaveClick: (post) => {\n\t\t\tdispatch(Save_Post_Action(post));\n\t\t\t\n\t\t},\n\t\tonPreviewClick: (post) => {\n\t\t    dispatch(Save_Post_Action(post));\n\t\t},\n\t\tloadSinglePost: (postid) => {\n\t\t\tif(postid == null || postid == ''){\n\t\t\t\tdispatch(Init_Post_Action());\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdispatch(Load_Single_Post_Action(postid));\n\t\t\t}\n\t\t},\n\t\tresetPost: () => {\n\t\t\t\tdispatch(Init_Post_Action());\n\t\t}\n\t}\n}\n\n\nconst PostDisplayContainer = connect(mapStateToProps, mapDispatchToProps)(PostDisplayComponent);\n\n\nexport default PostDisplayContainer"]}