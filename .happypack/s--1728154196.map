{"version":3,"sources":["app/components/SinglePostComponent.jsx"],"names":["SinglePostComponent","props","handlePostTitleChange","bind","handlePostURLChange","handlePostThumbChange","handlePostFrontpagePhotoChange","handlePostTagsChange","handlePostAbstractChange","handlePostContentChange","handlePublished","console","log","post","mode","postid","loadSinglePost","resetPost","nextProps","e","title","target","value","url","thumb","frontpagephoto","tags","published","checked","abstract","getContent","content","lastmodified","author","userid","name","__html","locale","no_auth","ref","refPostUrl","menubar","statusbar","plugins","toolbar","height","theme","toolbar1","toolbar2","onSaveClick","renderDisplay","renderEdit","Component","PropTypes","object","isRequired"],"mappings":"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","file":"SinglePostComponent.jsx","sourceRoot":"/home/ubuntu/workspace","sourcesContent":["import React, { PropTypes } from 'react'\nimport {ButtonToolbar, Button, Table, FormGroup, ControlLabel, FormControl, HelpBlock, Checkbox, Form, Col} from 'react-bootstrap'\nimport TinyMCE from 'react-tinymce';\nimport Layout from '../components/Layout'\n\nimport locale from '../../share/util/locale'\nimport global_config from '../../share/global_config'\n\nclass SinglePostComponent extends React.Component{\n    \n    constructor(props){\n        super(props);\n        this.props = props;\n        \n        this.handlePostTitleChange = this.handlePostTitleChange.bind(this);\n        this.handlePostURLChange = this.handlePostURLChange.bind(this);\n        this.handlePostThumbChange = this.handlePostThumbChange.bind(this);\n        this.handlePostFrontpagePhotoChange = this.handlePostFrontpagePhotoChange.bind(this);\n        this.handlePostTagsChange = this.handlePostTagsChange.bind(this);\n        this.handlePostAbstractChange = this.handlePostAbstractChange.bind(this);\n        this.handlePostContentChange = this.handlePostContentChange.bind(this);\n        this.handlePublished = this.handlePublished.bind(this);\n        \n    }\n    \n    componentWillMount() {\n        \n        console.log('check state change in componentWillMount - ', this.props.post, this.props.mode);\n        \n        if(this.props.postid != null && this.props.postid != '' && this.props.postid != 'new'){\n            this.props.loadSinglePost(this.props.postid);\n        }\n        else if(this.props.postid == 'new'){\n             this.props.resetPost();\n        }\n\n    }\n    \n    componentWillUnmount(){\n        this.props.resetPost();\n    }\n    \n    componentWillReceiveProps(nextProps) {\n        \n        if(nextProps.postid != this.props.postid){\n            if (nextProps.postid != null && nextProps.postid != '' && nextProps.postid != 'new') {\n                this.props.loadSinglePost(nextProps.postid);\n            }\n            else if (nextProps.postid == 'new') {\n                this.props.resetPost();\n            }\n        }\n        \n    }\n\n    \n    handlePostTitleChange(e) {\n        this.props.post.title = e.target.value;\n    }\n    \n    \n    handlePostURLChange(e) {\n        this.props.post.url = e.target.value;\n    }    \n    \n    handlePostThumbChange(e) {\n        this.props.post.thumb = e.target.value;\n    } \n  \n    handlePostFrontpagePhotoChange(e) {\n        this.props.post.frontpagephoto = e.target.value;\n    } \n    \n    handlePostTagsChange(e) {\n        this.props.post.tags = e.target.value;\n    } \n    \n    handlePublished(e) {\n        this.props.post.published = e.target.checked;\n    }    \n    \n    handlePostAbstractChange(e) {\n        this.props.post.abstract = e.target.getContent();\n        console.log('Content was updated:', e.target.getContent());\n    } \n    \n    handlePostContentChange(e) {\n        this.props.post.content = e.target.getContent();\n    } \n    \n    renderDisplay(){\n        return (<Layout>        \n            <h2 className=\"title\">\n                {this.props.post.title}\n            </h2>\n           <div className=\"meta\">\n                <ul className=\"meta-list list-inline\">\n                    <li className=\"updated\"><i className=\"fa fa-calendar\"></i>{this.props.post.lastmodified}</li>\n                    <li className=\"post-author updated\"><i className=\"fa fa-user\"></i> <a href={this.props.post.author.userid}>{this.props.post.author.name}</a></li>\n                    <li className=\"post-comments-link updated\">\n\n                    <a href=\"#comment-area\"><i className=\"fa fa-comments\"></i> 0 Comments</a>\n                    </li>\n                </ul>\n           </div>\n           \n           <div className=\"content\" dangerouslySetInnerHTML={{__html: this.props.post.content}}>\n        \n           </div>\n                      \n              \n          </Layout>  );\n    }\n\n    \n    renderEdit(){\n    \n        if(this.props.userid == null){\n            return (<Layout>{locale[global_config.locale].no_auth}</Layout>)\n        }\n        \n        if(this.props.postid != '' && this.props.postid != null && this.props.postid != 'new' && this.props.post.author != null && this.props.post.author.userid != this.props.userid){\n            \n             return (<Layout>{locale[global_config.locale].no_auth}</Layout>)\n        }\n        \n        if(this.props.postid != '' && this.props.postid != null && this.props.postid != 'new' && (this.props.post.title == null || this.props.post.title == '') ){\n            return null;\n        }\n        \n        return (<Layout key={this.props.postid}>        \n                   <Form horizontal>\n                        <FormGroup controlId=\"formHorizontalEmail\">\n                          <Col componentClass={ControlLabel} sm={2}>\n                            Title\n                          </Col>\n                          <Col sm={10}>\n                            <FormControl \n                                type=\"text\" \n                                placeholder=\"Post title\" \n                                defaultValue={this.props.post.title}\n                                onChange={this.handlePostTitleChange}\n                            />\n                          </Col>\n                        </FormGroup>\n                        \n                        <FormGroup controlId=\"formHorizontalEmail\">\n                          <Col componentClass={ControlLabel} sm={2}>\n                            URL\n                          </Col>\n                          <Col sm={10}>\n                            <FormControl \n                                type=\"text\" \n                                placeholder=\"Post url\" \n                                defaultValue={this.props.post.url}\n                                onChange={this.handlePostURLChange}/>\n                          </Col>\n                        </FormGroup>\n                        \n                        <FormGroup controlId=\"formHorizontalThumbPHoto\">\n                          <Col componentClass={ControlLabel} sm={2}>\n                            Thumb Photo\n                          </Col>\n                          <Col sm={10}>\n                            <FormControl \n                                type=\"text\" \n                                placeholder=\"URL for your thumb photo\" \n                                ref={(ref) => this.refPostUrl = ref}\n                                defaultValue={this.props.post.thumb}\n                                onChange={this.handlePostThumbChange}/>\n                          </Col>\n                        </FormGroup>\n                        \n                        <FormGroup controlId=\"formHorizontalFrontPHoto\">\n                          <Col componentClass={ControlLabel} sm={2}>\n                            Front Photo\n                          </Col>\n                          <Col sm={10}>\n                            <FormControl \n                                type=\"text\" \n                                placeholder=\"URL for your front page photo\" \n                                defaultValue={this.props.post.frontpagephoto}\n                                onChange={this.handlePostFrontpagePhotoChange}/>\n                          </Col>\n                        </FormGroup>\n    \n                        <FormGroup controlId=\"formHorizontalTags\">\n                          <Col componentClass={ControlLabel} sm={2}>\n                            Tags\n                          </Col>\n                          <Col sm={10}>\n                            <FormControl \n                                type=\"text\" \n                                placeholder=\"Tags; separated by comma\" \n                                defaultValue={this.props.post.tags}\n                                onChange={this.handlePostTagsChange}\n                            \n                            />\n                          </Col>\n                        </FormGroup>\n                    \n                        <FormGroup>\n                          <Col smOffset={2} sm={10}>\n                            <Checkbox defaultChecked={this.props.post.published} onClick={this.handlePublished}>Publish</Checkbox>\n                          </Col>\n                        </FormGroup>\n                    \n    \n      \n                        <FormGroup>\n                            <Col componentClass={ControlLabel} sm={2}>\n                                Abstract\n                            </Col>\n                            <Col sm={10}>\n                              <TinyMCE\n                                      content={this.props.post.abstract}\n                                      config={{\n                                        menubar: false,\n                                        statusbar: false,\n                                        plugins: 'link image code',\n                                        toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code',\n\n                                      }}\n                                      onChange={this.handlePostAbstractChange}\n                              />\n                            </Col>\n                        </FormGroup>\n                        \n                        <FormGroup>\n                            <Col componentClass={ControlLabel} sm={2}>\n                                Content\n                            </Col>\n                            <Col sm={10}>\n                              <TinyMCE\n                                      content={this.props.post.content}\n                                      config={{\n                                          height: 300,\n                                          theme: 'modern',\n                                          plugins: [\n                                            'advlist autolink lists link image charmap print preview hr anchor pagebreak',\n                                            'searchreplace wordcount visualblocks visualchars code fullscreen',\n                                            'insertdatetime media nonbreaking save table contextmenu directionality',\n                                            'emoticons template paste textcolor colorpicker textpattern imagetools'\n                                          ],\n                                          toolbar1: 'insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',\n                                          toolbar2: 'print preview media | forecolor backcolor emoticons | code'\n                                      }}\n                                      onChange={this.handlePostContentChange}\n                              />\n                            </Col>\n                        </FormGroup>\n                        \n                        <FormGroup>\n                          <Col smOffset={2} sm={10}>\n                            <Button onClick={(e)=>this.props.onSaveClick(this.props.post)}>\n                              Save\n                            </Button>\n                            <Button>\n                              Preview\n                            </Button>\n                          </Col>\n                        </FormGroup>\n                </Form>\n              \n          </Layout>  );\n    }\n    \n        \n    render(){\n        if((this.props.mode == null || this.props.mode == 'view') && this.props.post.postid != null){\n            return this.renderDisplay();\n        }\n        else if(this.props.mode == 'edit'){\n            return this.renderEdit();\n        }\n        else{\n            return null;\n        }\n    }\n}\n\nSinglePostComponent.PropTypes = {\n    post: React.PropTypes.object.isRequired\n}\n\nexport default SinglePostComponent"]}